/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Treasury,
  TreasuryInterface,
} from "../../../contracts/treasury/Treasury";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsAllocated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "asset",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "addInvestment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "allocateFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "allocatedFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getInvestmentOptions",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "asset",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct ITreasury.Investment[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getState",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allocatedFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "availableFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdated",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "asset",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct ITreasury.Investment[]",
            name: "investmentPortfolio",
            type: "tuple[]",
          },
        ],
        internalType: "struct ITreasury.TreasuryState",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "investmentPortfolio",
    outputs: [
      {
        internalType: "string",
        name: "asset",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdated",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract SADLToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "transactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transactions",
    outputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161116438038061116483398101604081905261002f916100b1565b61003833610061565b600180546001600160a01b0319166001600160a01b0392909216919091179055426004556100e1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100c357600080fd5b81516001600160a01b03811681146100da57600080fd5b9392505050565b611074806100f06000396000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c80639ace38c211610097578063d0b06f5d11610066578063d0b06f5d14610218578063d4cc54e414610221578063f2fde38b1461022a578063fc0c546a1461023d57600080fd5b80639ace38c2146101c3578063b29b7b95146101e7578063b6b55f25146101fc578063b77bf6001461020f57600080fd5b8063715018a6116100d3578063715018a61461016c5780638c6d795f146101745780638da5cb5b14610187578063968ed600146101ac57600080fd5b8062f714ce146101045780631865c57d146101195780632457a50b14610137578063482e5bb014610159575b600080fd5b610117610112366004610b6e565b610250565b005b6101216103cf565b60405161012e9190610be0565b60405180910390f35b61014a610145366004610c96565b61053e565b60405161012e93929190610caf565b610117610167366004610b6e565b610600565b6101176106bd565b610117610182366004610cea565b6106d1565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161012e565b6101b560025481565b60405190815260200161012e565b6101d66101d1366004610c96565b610759565b60405161012e959493929190610dae565b6101ef61081e565b60405161012e9190610dee565b61011761020a366004610c96565b610923565b6101b560075481565b6101b560045481565b6101b560035481565b610117610238366004610e6f565b610a2f565b600154610194906001600160a01b031681565b610258610aa8565b6003546002546102689190610ea7565b8211156102bc5760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e7420617661696c61626c652066756e64730000000060448201526064015b60405180910390fd5b60015460405163a9059cbb60e01b81526001600160a01b038381166004830152602482018590529091169063a9059cbb906044016020604051808303816000875af115801561030f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103339190610ec0565b6103715760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064016102b3565b81600260008282546103839190610ea7565b9091555050426004556040518281526001600160a01b038216907feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d906020015b60405180910390a25050565b6104016040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b6040518060a001604052806002548152602001600354815260200160035460025461042c9190610ea7565b815260200160045481526020016005805480602002602001604051908101604052809291908181526020016000905b82821015610533578382906000526020600020906003020160405180606001604052908160008201805461048e90610ee2565b80601f01602080910402602001604051908101604052809291908181526020018280546104ba90610ee2565b80156105075780601f106104dc57610100808354040283529160200191610507565b820191906000526020600020905b8154815290600101906020018083116104ea57829003601f168201915b50505050508152602001600182015481526020016002820154815250508152602001906001019061045b565b505050915250919050565b6005818154811061054e57600080fd5b906000526020600020906003020160009150905080600001805461057190610ee2565b80601f016020809104026020016040519081016040528092919081815260200182805461059d90610ee2565b80156105ea5780601f106105bf576101008083540402835291602001916105ea565b820191906000526020600020905b8154815290600101906020018083116105cd57829003601f168201915b5050505050908060010154908060020154905083565b610608610aa8565b6003546002546106189190610ea7565b8211156106675760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e7420617661696c61626c652066756e64730000000060448201526064016102b3565b81600360008282546106799190610f1c565b9091555050426004556040518281526001600160a01b038216907f870f86672db2c7b197484fa0218e97fe38eb7c89fd39ed2c4c910734c66182f8906020016103c3565b6106c5610aa8565b6106cf6000610b02565b565b6106d9610aa8565b604080516060810182528481526020810184905290810182905260058054600181018255600091909152815160039091027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0019081906107399082610f7e565b506020820151600182015560409091015160029091015550504260045550565b6006602052600090815260409020805460018201546002830180546001600160a01b0390931693919261078b90610ee2565b80601f01602080910402602001604051908101604052809291908181526020018280546107b790610ee2565b80156108045780601f106107d957610100808354040283529160200191610804565b820191906000526020600020905b8154815290600101906020018083116107e757829003601f168201915b50505050600383015460049093015491929160ff16905085565b60606005805480602002602001604051908101604052809291908181526020016000905b8282101561091a578382906000526020600020906003020160405180606001604052908160008201805461087590610ee2565b80601f01602080910402602001604051908101604052809291908181526020018280546108a190610ee2565b80156108ee5780601f106108c3576101008083540402835291602001916108ee565b820191906000526020600020905b8154815290600101906020018083116108d157829003601f168201915b505050505081526020016001820154815260200160028201548152505081526020019060010190610842565b50505050905090565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561097a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099e9190610ec0565b6109dc5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064016102b3565b80600260008282546109ee9190610f1c565b90915550504260045560405181815233907f543ba50a5eec5e6178218e364b1d0f396157b3c8fa278522c2cb7fd99407d4749060200160405180910390a250565b610a37610aa8565b6001600160a01b038116610a9c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102b3565b610aa581610b02565b50565b6000546001600160a01b031633146106cf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102b3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610b6957600080fd5b919050565b60008060408385031215610b8157600080fd5b82359150610b9160208401610b52565b90509250929050565b6000815180845260005b81811015610bc057602081850181015186830182015201610ba4565b506000602082860101526020601f19601f83011685010191505092915050565b6000602080835260c083018451828501528185015160408181870152808701519150606082818801528088015160808801526080880151925060a08088015283835180865260e08901915060e08160051b8a01019550868501945060005b81811015610c875789870360df1901835285518051858952610c62868a0182610b9a565b828b01518a8c0152918701519887019890985296509487019491870191600101610c3e565b50949998505050505050505050565b600060208284031215610ca857600080fd5b5035919050565b606081526000610cc26060830186610b9a565b60208301949094525060400152919050565b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215610cff57600080fd5b833567ffffffffffffffff80821115610d1757600080fd5b818601915086601f830112610d2b57600080fd5b813581811115610d3d57610d3d610cd4565b604051601f8201601f19908116603f01168101908382118183101715610d6557610d65610cd4565b81604052828152896020848701011115610d7e57600080fd5b82602086016020830137600060208483010152809750505050505060208401359150604084013590509250925092565b60018060a01b038616815284602082015260a060408201526000610dd560a0830186610b9a565b6060830194909452509015156080909101529392505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610e6157603f19898403018552815160608151818652610e3b82870182610b9a565b838b0151878c015292890151958901959095525094870194925090860190600101610e15565b509098975050505050505050565b600060208284031215610e8157600080fd5b610e8a82610b52565b9392505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610eba57610eba610e91565b92915050565b600060208284031215610ed257600080fd5b81518015158114610e8a57600080fd5b600181811c90821680610ef657607f821691505b602082108103610f1657634e487b7160e01b600052602260045260246000fd5b50919050565b80820180821115610eba57610eba610e91565b601f821115610f7957600081815260208120601f850160051c81016020861015610f565750805b601f850160051c820191505b81811015610f7557828155600101610f62565b5050505b505050565b815167ffffffffffffffff811115610f9857610f98610cd4565b610fac81610fa68454610ee2565b84610f2f565b602080601f831160018114610fe15760008415610fc95750858301515b600019600386901b1c1916600185901b178555610f75565b600085815260208120601f198616915b8281101561101057888601518255948401946001909101908401610ff1565b508582101561102e5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea264697066735822122055c4b11d484dfbd334d076b414bebb3b89dca2b030409d768012d9da56a2a01964736f6c63430008130033";

type TreasuryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasuryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Treasury__factory extends ContractFactory {
  constructor(...args: TreasuryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override deploy(
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_token, overrides || {}) as Promise<
      Treasury & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Treasury__factory {
    return super.connect(runner) as Treasury__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryInterface {
    return new Interface(_abi) as TreasuryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Treasury {
    return new Contract(address, _abi, runner) as unknown as Treasury;
  }
}
